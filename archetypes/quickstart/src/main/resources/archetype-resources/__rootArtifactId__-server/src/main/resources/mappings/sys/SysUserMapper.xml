#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package}.domain.sys.repository.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="${package}.domain.sys.repository.po.SysUserPO">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="photo" jdbcType="VARCHAR" property="photo"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="INTEGER" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
    </resultMap>

    <sql id="Base_Column_List">
    t.user_id,t.username,t.password,t.name,t.mobile,t.photo,t.email,t.status,t.create_by,t.create_time,t.update_by,t.update_time,t.remarks
    </sql>

    <sql id="Query_Table" >
    sys_user t
    </sql>

    <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from <include refid="Query_Table" />
        where t.user_id = ${symbol_pound}{userId}
    </select>

    <select id="selectByCondition" parameterType="${package}.domain.sys.repository.po.SysUserPOCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from <include refid="Query_Table" />
        <where>
            <if test="username != null and username != ''">
            and t.username = ${symbol_pound}{username}
            </if>
            <if test="name != null and name != ''">
            and t.name = ${symbol_pound}{name}
            </if>
            <if test="mobile != null and mobile != ''">
            and t.mobile = ${symbol_pound}{mobile}
            </if>
        </where>
        <choose>
            <when test="sortField != null and sortField != '' and sortOrder != null and sortOrder !=''">
                order by ${symbol_dollar}{sortField} ${symbol_dollar}{sortOrder}
            </when>
            <otherwise>
                order by t.create_time desc
            </otherwise>
        </choose>
    </select>

    <delete id="deleteByPrimaryKey">
        delete t from sys_user t
        where t.user_id in
        <foreach item="item" collection="array" separator="," open="(" close=")">
            ${symbol_pound}{item}
        </foreach>
    </delete>

    <insert id="insert" keyColumn="user_id" keyProperty="userId" useGeneratedKeys="true">
        insert into sys_user (username,password,name,mobile,photo,email,status,create_by,create_time,update_by,update_time,remarks)
        values
        <foreach item="item" collection="array" separator=",">
            (${symbol_pound}{item.username},${symbol_pound}{item.password},${symbol_pound}{item.name},${symbol_pound}{item.mobile},${symbol_pound}{item.photo},${symbol_pound}{item.email},${symbol_pound}{item.status},${symbol_pound}{item.createBy},${symbol_pound}{item.createTime},${symbol_pound}{item.updateBy},${symbol_pound}{item.updateTime},${symbol_pound}{item.remarks})
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="${package}.domain.sys.repository.po.SysUserPO">
        update sys_user t
        <set>
            <if test="username != null">
                t.username = ${symbol_pound}{username},
            </if>
            <if test="password != null">
                t.password = ${symbol_pound}{password},
            </if>
            <if test="name != null">
                t.name = ${symbol_pound}{name},
            </if>
            <if test="mobile != null">
                t.mobile = ${symbol_pound}{mobile},
            </if>
            <if test="photo != null">
                t.photo = ${symbol_pound}{photo},
            </if>
            <if test="email != null">
                t.email = ${symbol_pound}{email},
            </if>
            <if test="status != null">
                t.status = ${symbol_pound}{status},
            </if>
            <if test="updateBy != null">
                t.update_by = ${symbol_pound}{updateBy},
            </if>
            <if test="updateTime != null">
                t.update_time = ${symbol_pound}{updateTime},
            </if>
            <if test="remarks != null">
                t.remarks = ${symbol_pound}{remarks}
            </if>
        </set>
        where t.user_id = ${symbol_pound}{userId}
    </update>
    <update id="updateByPrimaryKey" parameterType="${package}.domain.sys.repository.po.SysUserPO">
        update sys_user t set
        t.username = ${symbol_pound}{username}
        ,t.password = ${symbol_pound}{password}
        ,t.name = ${symbol_pound}{name}
        ,t.mobile = ${symbol_pound}{mobile}
        ,t.photo = ${symbol_pound}{photo}
        ,t.email = ${symbol_pound}{email}
        ,t.status = ${symbol_pound}{status}
        ,t.update_by = ${symbol_pound}{updateBy}
        ,t.update_time = ${symbol_pound}{updateTime}
        ,t.remarks = ${symbol_pound}{remarks}
        where t.user_id = ${symbol_pound}{userId}
    </update>
</mapper>